# -*- coding: utf-8 -*-
"""Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a62w1UFUTs9a1gsk-TV_owDRiVowk6n6
"""

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Step 1: Manually embedded IMDb-style reviews
reviews = [
    # Positive reviews
    "An absolute masterpiece. The story was gripping and the acting was phenomenal.",
    "Loved every minute of this film. Brilliant performances and stunning visuals.",
    "A beautiful and emotional journey. Highly recommend it.",
    "Fantastic direction and a powerful message.",
    "A truly unforgettable experience. Emotional and raw.",
    "Heartwarming and beautifully shot.",
    "Brilliant performances and a compelling story.",
    "Loved the soundtrack and the cinematography.",
    "An inspiring and beautifully crafted film.",
    "A wonderful little production. The realism was top-notch.",
    "A masterpiece of storytelling and direction.",
    "Fantastic visuals and compelling narrative.",
    "Deeply moving and thought-provoking.",
    "A cinematic triumph. Every scene was perfect.",
    "A must-watch. Powerful and poetic.",
    "The characters were rich and well-developed.",
    "A brilliant blend of emotion and suspense.",
    "A film that stays with you long after it ends.",
    "A stunning achievement in filmmaking.",
    "A perfect balance of drama and beauty.",
    "A heartfelt and beautifully told story.",
    "A visual treat with a strong emotional core.",
    "A film that touches the soul.",
    "A deeply human and resonant story.",
    "An elegant and powerful narrative.",

    # Negative reviews
    "Absolutely terrible. I couldn't finish it. The plot made no sense.",
    "Worst movie ever. Bad acting, bad script, bad everything.",
    "Not worth the time. Completely boring and predictable.",
    "Awful direction and editing. A complete mess.",
    "The plot was weak and the pacing was painfully slow.",
    "I couldn't sit through it. It was boring and flat.",
    "Disappointing. I expected much more from this director.",
    "The editing was choppy and the scenes felt disconnected.",
    "The dialogue was cringe-worthy and unnatural.",
    "The soundtrack was annoying and repetitive.",
    "Poorly written and executed. Not worth the time.",
    "Terrible acting and weak plot. A disaster.",
    "The story lacked depth and originality.",
    "A complete waste of time. Nothing redeeming.",
    "The characters were shallow and unconvincing.",
    "The visuals were dull and uninspired.",
    "A painfully slow and uneventful film.",
    "The script was lazy and full of clichés.",
    "A forgettable and poorly made movie.",
    "The performances were wooden and lifeless.",
    "A confusing and incoherent mess.",
    "The pacing was off and the story dragged.",
    "A film that fails on every level.",
    "Uninspired and lacking any emotional impact.",
    "A tedious and disappointing experience."
]

# Step 2: Corresponding sentiments (1 = positive, 0 = negative)
sentiments = [1]*25 + [0]*25

# Step 3: Vectorize the text
vectorizer = CountVectorizer(stop_words='english')
X = vectorizer.fit_transform(reviews)
y = sentiments

# Step 4: Split into training and test sets with stratification
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

# Step 5: Train the model
model = LogisticRegression()
model.fit(X_train, y_train)

# Step 6: Predict and evaluate
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)

print("✅ Model Accuracy:", round(accuracy * 100, 2), "%")